C51 COMPILER V9.54   DS1302                                                                04/02/2016 02:16:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE c\DS1302.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\DS1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include"ds1302.h"
   2          #include"KEY.h"
*** WARNING C318 IN LINE 2 OF c\DS1302.c: can't open file 'KEY.h'
   3          #include"ir.h"
   4          
   5          //---DS1302写入和读取时分秒的地址命令---//
   6          //---秒分时日月周年 最低位读写位;-------//
   7          uchar code READ_RTC_ADDR[7]  = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d}; 
   8          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   9          
  10          //---DS1302时钟初始化2013年1月1日星期二12点00分00秒。---//
  11          //---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  12          uchar TIME[] = {0x12, 0x12, 0x12, 0x26, 0x02, 0x05, 0x16};
  13          uchar HOUR[3],MINUTE[3],SECOND[3];
  14          
  15          /*******************************************************************************
  16          * 函 数 名         : Ds1302Write
  17          * 函数功能       : 向DS1302命令（地址+数据）
  18          * 输    入         : addr,dat
  19          * 输    出         : 无
  20          *******************************************************************************/
  21          
  22          void Ds1302Write(uchar addr, uchar dat)
  23          {
  24   1        uchar n;
  25   1        RST = 0;
  26   1        _nop_();  //声明一个空函数，做延迟使用；
  27   1      
  28   1        SCLK = 0;//先将SCLK置低电平。
  29   1        _nop_();
  30   1        RST = 1; //然后将RST(CE)置高电平，CE置高电平，才允许操作IC；
  31   1        _nop_();
  32   1      
  33   1        for (n=0; n<8; n++)//开始传送八位地址命令 ，先发送一位数据到DSIO端口，然后拉高CLK，触发SD1302读取一位数据
             -；
  34   1        {
  35   2          DSIO = addr & 0x01;//数据从低位开始传送
  36   2          addr >>= 1;
  37   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  38   2            _nop_();
  39   2          SCLK = 0;
  40   2          _nop_();
  41   2        }
  42   1        for (n=0; n<8; n++)//写入8位数据
  43   1        {
  44   2          DSIO = dat & 0x01;
  45   2          dat >>= 1;
  46   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  47   2          _nop_();
  48   2          SCLK = 0;
  49   2          _nop_();  
  50   2        } 
  51   1           
  52   1        RST = 0;//传送数据结束，操作结束，需要CE拉低，防止电平干扰；
C51 COMPILER V9.54   DS1302                                                                04/02/2016 02:16:15 PAGE 2   

  53   1        _nop_();
  54   1      }
  55          
  56          /*******************************************************************************
  57          * 函 数 名         : Ds1302Read
  58          * 函数功能       : 读取一个地址的数据
  59          * 输    入         : addr
  60          * 输    出         : dat
  61          *******************************************************************************/
  62          
  63          uchar Ds1302Read(uchar addr)
  64          {
  65   1        uchar n,dat=0,dat1=0;
  66   1        RST = 0;
  67   1        _nop_();
  68   1      
  69   1        SCLK = 0;//先将SCLK置低电平。
  70   1        _nop_();
  71   1        RST = 1;//然后将RST(CE)置高电平。
  72   1        _nop_();
  73   1        //先传送8位地址，然后开始读取数据；
  74   1      
  75   1        for(n=0; n<8; n++)//开始传送八位地址命令
  76   1        {
  77   2          DSIO = addr & 0x01;//数据从低位开始传送
  78   2          addr >>= 1;
  79   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  80   2          _nop_();
  81   2          SCLK = 0;//DS1302下降沿时，放置数据
  82   2          _nop_();
  83   2        }
  84   1        _nop_();
  85   1        for(n=0; n<8; n++)//读取8位数据
  86   1        {
  87   2          dat1 = DSIO&0x01;//从最低位开始接收
  88   2          //dat = (dat>>1) | (dat1<<7);
  89   2          dat+=dat1<<n;
  90   2          SCLK = 1;
  91   2          _nop_();
  92   2          SCLK = 0;//DS1302下降沿时，放置数据
  93   2          _nop_();
  94   2        }
  95   1      
  96   1        RST = 0;
  97   1        _nop_();  //以下为DS1302复位的稳定时间,必须的。
  98   1        DSIO = 0;
  99   1        _nop_();
 100   1        DSIO = 0;
 101   1        _nop_();
 102   1        DSIO = 1;
 103   1        _nop_();
 104   1      
 105   1      
 106   1        return dat; 
 107   1      }
 108          
 109          /*******************************************************************************
 110          * 函 数 名         : Ds1302Init
 111          * 函数功能       : 初始化DS1302.
 112          * 输    入         : 无
 113          * 输    出         : 无
 114          *******************************************************************************/
C51 COMPILER V9.54   DS1302                                                                04/02/2016 02:16:15 PAGE 3   

 115          
 116          void Ds1302Init()
 117          {
 118   1       
 119   1      //  uchar n;
 120   1      /*  Ds1302Write(0x8E,0X00);    //禁止写保护，就是关闭写保护功能
 121   1        for (n=0; n<7; n++)//写入7个字节的时钟信号：分秒时日月周年
 122   1        {
 123   1          Ds1302Write(WRITE_RTC_ADDR[n],TIME[n]); 
 124   1        }
 125   1      */
 126   1        Ds1302Write(0x8E,0x80);    //打开写保护功能
 127   1        RST=0;
 128   1      }
 129          
 130          /*******************************************************************************
 131          * 函 数 名         : Ds1302ReadTime
 132          * 函数功能       : 读取时钟信息
 133          * 输    入         : 无
 134          * 输    出         : 无
 135          *******************************************************************************/
 136          
 137          void Ds1302ReadTime()
 138          {
 139   1        uchar n;
 140   1        for (n=0; n<7; n++)//读取7个字节的时钟信号：分秒时日月周年
 141   1        {
 142   2          TIME[n] = Ds1302Read(READ_RTC_ADDR[n]);
 143   2        }
 144   1        
 145   1        HOUR[0]    = '0'+(TIME[2]/16);
 146   1        HOUR[1]    = '0'+(TIME[2]&0x0F);
 147   1        HOUR[2]    = '\0';//结束符
 148   1        
 149   1        MINUTE[0]  = '0'+(TIME[1]/16);
 150   1        MINUTE[1]  = '0'+(TIME[1]&0x0F);
 151   1        MINUTE[2]  = '\0';//结束符
 152   1        
 153   1        SECOND[0]  = '0'+(TIME[0]/16);
 154   1        SECOND[1]  = '0'+(TIME[0]&0x0F);  
 155   1        SECOND[2]  = '\0';//结束符
 156   1      }
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     16    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
